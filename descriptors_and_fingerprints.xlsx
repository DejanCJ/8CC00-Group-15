import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from sklearn.svm import SVC
from sklearn.linear_model import LogisticRegression
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score, confusion_matrix, f1_score, precision_score
import matplotlib.pyplot as plt
from rdkit import Chem
from rdkit.Chem import AllChem
import numpy as np

# Load your data

y_pkm2 = result_df_filtered['PKM2_inhibition']
y_erk2 = result_df_filtered['ERK2_inhibition']
X = result_df_filtered.drop(columns=['SMILES', 'PKM2_inhibition', 'ERK2_inhibition'])

# Generate molecular fingerprints
def generate_fingerprints(smiles_list):
    fingerprints = []
    for smiles in smiles_list:
        mol = Chem.MolFromSmiles(smiles)
        if mol is not None:
            fp = AllChem.GetMorganFingerprintAsBitVect(mol, radius=2, nBits=2048)
            fingerprints.append(fp)
        else:
            fingerprints.append(np.zeros(2048))
    return np.array(fingerprints)

# Add fingerprints to the dataset
fingerprints = generate_fingerprints(result_df_filtered['SMILES'])
fingerprint_df = pd.DataFrame(fingerprints, columns=[f'FP_{i}' for i in range(fingerprints.shape[1])])
X_combined_finger = pd.concat([X, fingerprint_df], axis=1)
